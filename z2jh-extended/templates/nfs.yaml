{{ if .Values.nfsServer.enabled -}}
# The persistent storage to be used by the nfs-server-pod
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-provisioned-pvc
  labels:
    component: nfs-storage
  annotations:
    storageClassName: ""
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: {{ .Values.nfsServer.storage | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server-deploy
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      # Required! The pod attached to PVC must die before a new pod can run.
      maxUnavailable: 1
  selector:
    matchLabels:
      component: nfs-server
  template:
    metadata:
      labels:
        name: nfs-server
        app: jupyterhub
        component: nfs-server
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      containers:
      - name: nfs-server-container
        image: {{ .Values.nfsServer.image.name }}:{{ .Values.nfsServer.image.tag }}
        ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        securityContext:
          privileged: true
        resources:
{{ toYaml .Values.nfsServer.resources | indent 10}}
        volumeMounts:
          - mountPath: /exports
            name: nfs-claimed-volume
      volumes:
        - name: nfs-claimed-volume
          persistentVolumeClaim:
            claimName: nfs-provisioned-pvc
---
# The nfs-server service
kind: Service
apiVersion: v1
metadata:
  name: nfs-server-svc
spec:
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    component: nfs-server
---
# The nfs-server's user's pv
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
  labels:
    type: nfs
spec:
  capacity:
    storage: {{ .Values.nfsServer.storage | quote }}
  accessModes:
    - ReadWriteMany
  nfs:
    server: "nfs-server-svc.{{ .Release.Namespace }}.svc.cluster.local"
    path: "/"
---
# The nfs-seas the existing host entry, though I am not sure we ensure a host direct exists before using hostDir
# Part of the problem here is that different containers can run as
# different users in the same pod - which user do we create the volume
# with? what we really need is a way to tell docker to add supplemental
# group IDs when launching a container, so we can assign all containers
# in a pod to a common group.rver's user's pvc
# TODO: This is quite specific for the use case... Perhaps i should isolate this?
# - It could be relevant to have within the authenticator's pre_spawn_start hook.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
spec:
  selector:
    matchLabels:
      type: nfs
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: {{ .Values.nfsServer.storage | quote }}
{{- end }}
